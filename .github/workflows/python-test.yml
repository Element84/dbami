name: Python Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 7654:5432

    steps:
      - name: Install pg_dump
        run: sudo apt-get install postgresql-client

      - name: Checkout
        uses: actions/checkout@v3

      - name: Load .env file into environment
        uses: cardinalby/export-env-action@v2
        with:
          envFile: '.env'
          expand: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
            **/requirements*.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install '.[dev]'

      - name: Lint with ruff
        run: |
          ruff check .

      - name: Test with pytest
        run: |
          pytest --cov=swoop --cov-report=xml -m "not ci_skip"
          pytest tests/test_cleanup.py

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v3
        with:
          #fail_ci_if_error: true
          verbose: true
