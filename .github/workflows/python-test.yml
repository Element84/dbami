name: Python Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Load .env file into environment
        uses: cardinalby/export-env-action@v2
        with:
          envFile: '.env'
          expand: true

      - name: Set pg_dump wrapper path
        run: echo "DBAMI_PG_DUMP=$(realpath pg-dump-wrapper)" >> $GITHUB_ENV

      - name: Make custom pg_dump wrapper
        run: |
          install -m 755 <(cat <<'EOF'
          #!/bin/sh
          cd "$(dirname "$0")"
          docker compose exec postgres pg_dump "$@"
          EOF
          ) "$DBAMI_PG_DUMP"

      - name: Bring up postgres
        run: docker compose up -d

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
            **/requirements*.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install '.[dev]'

      - name: Lint with ruff
        run: |
          ruff check .

      - name: Test with pytest
        run: |
          pytest --cov=dbami --cov-report=xml
          pytest tests/test_cleanup.py

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          verbose: true
